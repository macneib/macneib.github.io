{"componentChunkName":"component---src-templates-blog-post-js","path":"/02-microk8s-multus-raspberry-pi/","result":{"data":{"site":{"siteMetadata":{"title":"Blair MacNeil's Blog"}},"markdownRemark":{"id":"97fd4cf9-633a-504b-9c7f-bb4d93b194fb","excerpt":"Introduction change the password in each pi board Add nodes in dev machines  files Paste the following snippet install ansible on control machine Paste theâ€¦","html":"<h3>Introduction</h3>\n<p>change the password in each pi board</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ssh ubuntu@192.168.1.16\nexit\n\nssh ubuntu@192.168.1.17\nexit\n\nssh ubuntu@192.168.1.18\nexit\n\nssh ubuntu@192.168.1.19\nexit</code></pre></div>\n<p>Add nodes in dev machines <code class=\"language-text\">/etc/hosts</code> files</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo vim /etc/hosts</code></pre></div>\n<p>Paste the following snippet</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">192.168.1.16    master01 master01.microk8s\n192.168.1.17    worker01 worker01.microk8s\n192.168.1.18    worker02 worker02.microk8s\n192.168.1.19    worker03 worker03.microk8s</code></pre></div>\n<p>install ansible on control machine</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt install ansible</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo vim /etc/ansible/hosts</code></pre></div>\n<p>Paste the following snippet</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[masters]\nmaster01  ansible_connection=ssh   var_hostname=master01 ansible_ssh_private_key_file=/home/macneib/.ssh/id_ed25519 ansible_ssh_user=ubuntu\n#master02  ansible_connection=ssh   var_hostname=master02\n#master03  ansible_connection=ssh   var_hostname=master03\n\n[workers]\nworker01  ansible_connection=ssh  var_hostname=worker01 ansible_ssh_private_key_file=/home/macneib/.ssh/id_ed25519 ansible_ssh_user=ubuntu\nworker02  ansible_connection=ssh  var_hostname=worker02 ansible_ssh_private_key_file=/home/macneib/.ssh/id_ed25519 ansible_ssh_user=ubuntu\nworker03  ansible_connection=ssh  var_hostname=worker03 ansible_ssh_private_key_file=/home/macneib/.ssh/id_ed25519 ansible_ssh_user=ubuntu\n#worker04  ansible_connection=ssh  var_hostname=worker04\n#worker05  ansible_connection=ssh  var_hostname=worker05\n#worker06  ansible_connection=ssh  var_hostname=worker06\n\n[microk8s:children]\nmasters\nworkers</code></pre></div>\n<p>Generate an ssh key</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</code></pre></div>\n<p>Copy ssh key over to remote machines</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ssh-copy-id -i ~/.ssh/id_ed25519.pub ubuntu@192.168.1.16\nssh-copy-id -i ~/.ssh/id_ed25519.pub ubuntu@192.168.1.17\nssh-copy-id -i ~/.ssh/id_ed25519.pub ubuntu@192.168.1.18\nssh-copy-id -i ~/.ssh/id_ed25519.pub ubuntu@192.168.1.19</code></pre></div>\n<p>Check if Ansible is working fine and can connect to all nodes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible microk8s -m ping</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible microk8s -b -m shell -a &quot;hostnamectl set-hostname {{ var_hostname }}&quot;\nansible cube -b -m shell -a &quot;hostnamectl status | grep hostname&quot;</code></pre></div>\n<p>Update the OS</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible microk8s -m apt -a &quot;upgrade=yes update_cache=yes&quot; --become</code></pre></div>\n<p>Enable c-groups so the kubelet will work out of the box</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible cube -b -m shell -a &quot;sed -i &#39;$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/&#39; /boot/firmware/cmdline.txt&quot;</code></pre></div>","frontmatter":{"title":"Microk8s with Calico and Multus on a Raspberry pi cluster","date":"February 24, 2021","description":"Notes from setting up microk8s with calico and multus on a raspberry pi cluster"}},"previous":{"fields":{"slug":"/01-pulsar-and-ros2/"},"frontmatter":{"title":"Apache Pulsar and ROS2"}},"next":null},"pageContext":{"id":"97fd4cf9-633a-504b-9c7f-bb4d93b194fb","previousPostId":"4f1b6900-0567-538a-a5fb-f7456e38cb00","nextPostId":null}},"staticQueryHashes":["2841359383","916993862"]}